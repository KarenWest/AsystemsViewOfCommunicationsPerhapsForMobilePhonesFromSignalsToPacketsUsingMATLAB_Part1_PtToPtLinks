tx_bs = rand(1,1280)>0.5; % generate a random bit sequence
SPB = 20;                 % bit time in samples

tx_bs_frame = frame_bs(tx_bs);              % add start and stop bit and generate framed block 
tx_wave = bitseq2waveform(tx_bs_frame,SPB); % create a sample waveform with SPB=20 
tx_wave = [zeros(1,500) ones(1,500) zeros(1,500) tx_wave];  % add training sequence

start_ind = 1501; % for convenience the start bit location is fixed

rx_wave = channel_final_04(tx_wave);        % transmit waveform through channel
rx_min = 0;
rx_max = 0;

for i=1:1500
    if (tx_wave(i) == 1) %if IN=1
        rx_max = rx_max + rx_wave(i);
    else
        rx_min = rx_min + rx_wave(i);
    end
end
rx_min = rx_min / 1000; %average of training sequence when IN=0
rx_max = rx_max / 500; %average of training seequence when IN=1
disp(rx_min);
disp(rx_max);

sample_ind = start_ind+2*SPB-1+SPB*[0:1279]; % set subsampling points
signal_samples = rx_wave(sample_ind);        % get the received samples 
xhist = 0.2:0.01:0.6;    % centers of histogram bins
nsamp = 80;   % number of samples to use for histogram
signal_samples_first80bits = signal_samples(1:80);
%disp(signal_samples_first80bits);
% Place your code below that plots the percentage histogram of 
% the first nsamp=80 samples from the vector signal_samples.
% 1. Use the function hist
% 2. Use the vector xhist defined above as the centers of the bins
% 3. The value of the histogram should be the percentage of samples in each bin,
%    where the percentage is expressed as a number between 0 and 1 (100%).
% 4. Plot the histogram using the MATLAB function BAR
[counts] = hist(signal_samples_first80bits,xhist); 
percents = counts ./ nsamp;
bar(xhist,percents);

thresh = 0.5*(rx_max+rx_min);                % set the optimal threshold
decoded_bs = rx_wave(sample_ind) > thresh;     % decode bit stream
empirical_BER = compute_BER(tx_bs,decoded_bs); % compute the BER
disp(empirical_BER);

% Plot histogram predicted by Gaussian distribution
%hold on; % all plots on the same figure
%plot_ghist(xhist,rx_min,sigma);      % predicted histogram
%title(['Number of Samples = ' num2str(nsamp) ]); % add title
%xlabel('Received signal');
%ylabel('Frequency (%)');
%hold off;
      
      
