tx_bs = rand(1,1280)>0.5;      % generate a random bit sequence
SPB = 20;                      % bit time in samples

tx_wave = format_bitseq(tx_bs,SPB);    % create waveform
rx_wave = txrx_lab06(tx_wave);         % simulate channel
start_ind = find_start_lab06(rx_wave); % find start bit

% Place your code below that applies an equalizer to the rx_wave and 
% stores the output as eq_wave.
% Assume that eq_wave(0) = 0.
eq_wave = zeros(size(rx_wave)); % initialize equalizer output
len_rxwave = length(rx_wave);
%disp(rx_wave);
%disp(len_rxwave);
for i = 1:len_rxwave
    %disp(i);
    %disp(rx_wave(i));
    if (i > 1)
        eq_wave(i) = 12.5 * rx_wave(i) - 11.5 * rx_wave(i - 1);
    else
        eq_wave(i) = 12.5 * rx_wave(i);
    end
end
% plot eye diagrams - do not modify code below
% plot eye diagram without equalization
subplot(2,1,1);
eye_diagram(rx_wave,start_ind,SPB);
title(['Eye Diagram without equalization, SPB = ' num2str(SPB) ]);
xlabel('Sample index')
ylabel('Amplitude');
grid on;
% plot eye diagram with equalization
subplot(2,1,2);
eye_diagram(eq_wave,start_ind,SPB);
title(['Eye Diagram with equalization, SPB = ' num2str(SPB) ]);
xlabel('Sample index')
ylabel('Amplitude');
grid on;
       
      
